---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Handle query parameters - redirect to clean URL if present
if (Astro.url.search) {
  // Use 301 redirect for SEO benefits, ensuring trailing slash consistency
  return Astro.redirect('/verses/', 301);
}

// Get all verses that are not drafts
const verses = await getCollection('verses', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort verses by date (newest first)
const sortedVerses = verses.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// SEO-optimized meta description
const versesDescription = `Explore ${verses.length} philosophical verses and poetry by Prassanna Ravishankar. Contemplations on technology, existence, and the human condition. Latest verses: ${sortedVerses.slice(0, 2).map(v => v.data.title).join(' and ')}.`;
---

<Layout 
  title="Verses | Prassanna Ravishankar" 
  description={versesDescription}
>
  <div class="container mx-auto py-12 px-4">
    <header class="max-w-3xl mx-auto mb-12 text-center">
      <h1 class="text-4xl font-bold mb-4">Verses</h1>
      <p class="text-xl text-gray-600 dark:text-gray-400">
        Exploring the depths of existence through poetry
      </p>
    </header>

    <div class="max-w-3xl mx-auto space-y-12">
      {sortedVerses.map(verse => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
          {verse.data.image && (
            <a href={`/verses/${verse.slug}`} class="block">
              <div class="aspect-video w-full overflow-hidden">
                <img 
                  src={verse.data.image} 
                  alt={verse.data.title}
                  class="w-full h-full object-cover transition-transform hover:scale-105 duration-300"
                />
              </div>
            </a>
          )}
          
          <div class="p-6">
            <h2 class="text-2xl font-bold mb-4">
              <a 
                href={`/verses/${verse.slug}`} 
                class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              >
                {verse.data.title}
              </a>
            </h2>
            
            {verse.data.description && (
              <p class="text-gray-600 dark:text-gray-400 mb-4">
                {verse.data.description}
              </p>
            )}
            
            <div class="flex flex-wrap gap-2 mb-4">
              {verse.data.tags?.map(tag => (
                <span class="bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-xs">
                  {tag}
                </span>
              ))}
            </div>
            
            <div class="text-sm text-gray-500 dark:text-gray-400">
              {new Date(verse.data.pubDate).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</Layout> 