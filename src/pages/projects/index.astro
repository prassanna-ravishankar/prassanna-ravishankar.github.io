---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

// Get all projects that are not drafts
const projects = await getCollection('projects', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort projects by date (newest first)
const sortedProjects = projects.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Featured projects
const featuredProjects = sortedProjects.filter(project => project.data.featured);

// Format date function
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

// SEO-optimized meta description
const projectsDescription = `Discover ${projects.length} machine learning and software engineering projects by Prassanna Ravishankar. Open-source tools for MLOps, AI development, and productivity including featured projects like ${featuredProjects.slice(0, 2).map(p => p.data.title).join(' and ')}.`;

// Projects-specific structured data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": "Projects by Prassanna Ravishankar",
  "description": projectsDescription,
  "url": "https://prassanna.io/projects/",
  "author": {
    "@type": "Person",
    "name": "Prassanna Ravishankar",
    "url": "https://prassanna.io",
    "sameAs": [
      "https://github.com/prassanna-ravishankar",
      "https://linkedin.com/in/prassanna-ravishankar",
      "https://x.com/thenomadiccoder"
    ]
  },
  "mainEntity": sortedProjects.slice(0, 10).map(project => ({
    "@type": "SoftwareApplication",
    "name": project.data.title,
    "description": project.data.description,
    "url": `https://prassanna.io/projects/${project.slug}/`,
    "dateCreated": project.data.pubDate.toISOString(),
    "dateModified": project.data.updatedDate?.toISOString() || project.data.pubDate.toISOString(),
    "author": {
      "@type": "Person",
      "name": "Prassanna Ravishankar"
    },
    "keywords": project.data.tags?.join(', ') || '',
    "image": project.data.image ? `https://prassanna.io${project.data.image}` : "https://prassanna.io/images/profile.jpg",
    "applicationCategory": "DeveloperApplication",
    "operatingSystem": "Cross-platform"
  }))
};
---

<Layout 
  title="Projects - Prassanna Ravishankar" 
  description={projectsDescription}
  structuredData={structuredData}
>
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl md:text-4xl font-semibold mb-6 text-center text-neutral-900 dark:text-neutral-100">Projects</h1>
    
    <p class="text-lg mb-8 text-center text-neutral-600 dark:text-neutral-400 max-w-3xl mx-auto leading-relaxed">
      A collection of open-source projects, tools, and experiments in machine learning, 
      software engineering, and developer productivity.
    </p>
    
    <!-- Featured Projects -->
    <section class="mb-12">
      <h2 class="text-xl font-semibold mb-6 text-center text-neutral-800 dark:text-neutral-200">Featured Projects</h2>
      <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {sortedProjects.map((project) => (
          <article class="card-elegant group">
            <div class="relative">
              {project.data.image ? (
                <Image 
                  src={project.data.image} 
                  alt={project.data.title}
                  width={400}
                  height={225}
                  loading="lazy"
                  class="w-full h-48 object-cover rounded-lg transition-transform group-hover:scale-[1.02] duration-300"
                />
              ) : (
                <div class="w-full h-48 bg-neutral-100 dark:bg-neutral-800 rounded-lg flex items-center justify-center">
                  <svg class="w-12 h-12 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                </div>
              )}
              {project.data.featured && (
                <span class="absolute top-2 right-2 bg-accent-600 text-white px-2 py-1 rounded text-xs font-medium">
                  Featured
                </span>
              )}
            </div>
            <div class="p-4">
              <header class="mb-3">
                <h2 class="text-lg font-semibold mb-2 leading-tight group-hover:text-accent-600 dark:group-hover:text-accent-400 transition-colors">
                  <a 
                    href={`/projects/${project.slug}/`}
                    class="link-elegant"
                  >
                    {project.data.title}
                  </a>
                </h2>
                <time datetime={project.data.pubDate.toISOString()} class="text-sm text-neutral-500 dark:text-neutral-400 flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                  </svg>
                  {formatDate(project.data.pubDate)}
                </time>
              </header>
              <p class="text-neutral-600 dark:text-neutral-400 mb-3 line-clamp-3 leading-relaxed text-sm">
                {project.data.description}
              </p>
              {project.data.tags && project.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-1 mb-3">
                  {project.data.tags.slice(0, 3).map(tag => (
                    <span class="bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400 px-2 py-1 rounded text-xs font-medium">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
              <a href={`/projects/${project.slug}/`} class="link-elegant text-sm font-medium">
                Learn more →
              </a>
            </div>
          </article>
        ))}
      </div>
    </section>
    
    <!-- All Projects -->
    <section class="max-w-6xl mx-auto">
      <h2 class="text-2xl font-bold mb-8 text-center text-content-800 dark:text-content-200">All Projects</h2>
      <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {sortedProjects.map((project) => (
          <article class="content-card group">
            {project.data.image ? (
              <div class="image-container mb-6">
                <Image 
                  src={project.data.image} 
                  alt={project.data.title}
                  width={400}
                  height={225}
                  loading="lazy"
                  class="w-full h-full object-cover transition-transform group-hover:scale-105 duration-300"
                />
              </div>
            ) : (
              <div class="w-full h-48 bg-gradient-to-br from-content-100 to-content-200 dark:from-content-700 dark:to-content-600 rounded-xl mb-6 flex items-center justify-center">
                <svg class="w-16 h-16 text-content-400 dark:text-content-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
                </svg>
              </div>
            )}
            <div class="p-2">
              <header class="mb-4">
                <h2 class="text-xl font-bold mb-3 leading-tight group-hover:text-accent-600 dark:group-hover:text-accent-400 transition-colors">
                  <a 
                    href={`/projects/${project.slug}/`}
                    class="link-beautiful"
                  >
                    {project.data.title}
                  </a>
                </h2>
                <time datetime={project.data.pubDate.toISOString()} class="text-sm text-content-500 dark:text-content-400 flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                  </svg>
                  {formatDate(project.data.pubDate)}
                </time>
              </header>
              <p class="text-content-600 dark:text-content-400 mb-4 line-clamp-3 leading-relaxed">
                {project.data.description}
              </p>
              {project.data.tags && project.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                  {project.data.tags.slice(0, 3).map(tag => (
                    <span class="bg-content-100 dark:bg-content-700 text-content-600 dark:text-content-400 px-2 py-1 rounded-md text-xs font-medium">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
              <a href={`/projects/${project.slug}/`} class="link-beautiful text-sm font-medium">
                Learn more →
              </a>
            </div>
          </article>
        ))}
      </div>
    </section>
  </main>
</Layout> 