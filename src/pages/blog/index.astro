---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all blog posts that are not drafts
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort posts by date in descending order
const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get unique tags for the tag cloud
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))];
const shuffledTags = allTags.sort(() => Math.random() - 0.5).slice(0, 10); // Random 10 tags

// Format date function
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

// Handle query parameters - redirect to clean URL if present
if (Astro.url.search) {
  return Astro.redirect('/blog/', 301);
}
---

<Layout title="Blog | Prassanna Ravishankar">
  <div class="container mx-auto py-12">
    <div class="max-w-4xl mx-auto">
      <header class="mb-12 text-center">
        <h1 class="text-4xl font-bold mb-4">Blog</h1>
        <p class="text-xl text-gray-600 dark:text-gray-400 mb-6">
          Thoughts on Machine Learning, AI, Technology, and the Future
        </p>
        
        <!-- Popular tags -->
        {shuffledTags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2">
            <span class="text-sm text-gray-500 dark:text-gray-400 mr-2">Popular topics:</span>
            {shuffledTags.map((tag) => (
              <a 
                href={`/tags/${tag}/`}
                class="text-sm bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-blue-100 dark:hover:bg-blue-900 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
              >
                {tag}
              </a>
            ))}
            <a 
              href="/tags/"
              class="text-sm text-blue-600 dark:text-blue-400 hover:underline"
            >
              View all tags â†’
            </a>
          </div>
        )}
      </header>
    
      <div class="grid gap-8">
        {sortedPosts.map(post => (
          <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <div class="p-6">
              <div class="flex flex-col md:flex-row md:items-center justify-between mb-4">
                <h2 class="text-2xl font-bold">
                  <a href={`/blog/${post.slug}/`} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                    {post.data.title}
                  </a>
                </h2>
                <time class="text-gray-500 dark:text-gray-400 text-sm mt-1 md:mt-0">
                  {formatDate(post.data.pubDate)}
                </time>
              </div>
              
              <p class="text-gray-600 dark:text-gray-300 mb-4">
                {post.data.description}
              </p>
              
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                  {post.data.tags.map(tag => (
                    <a
                      href={`/tags/${tag}/`}
                      class="bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-sm hover:bg-blue-100 dark:hover:bg-blue-900 hover:text-blue-700 dark:hover:text-blue-300 transition-colors"
                    >
                      {tag}
                    </a>
                  ))}
                </div>
              )}
              
              <a href={`/blog/${post.slug}/`} class="text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center">
                Read more
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                </svg>
              </a>
            </div>
          </article>
        ))}
      </div>
      
      {sortedPosts.length === 0 && (
        <div class="text-center py-12">
          <p class="text-gray-600 dark:text-gray-400">No blog posts found. Check back soon!</p>
        </div>
      )}
    </div>
  </div>
</Layout> 