---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Handle query parameters - redirect to clean URL if present
if (Astro.url.search) {
  // Use 301 redirect for SEO benefits, ensuring trailing slash consistency
  return Astro.redirect('/blog/', 301);
}

// Get all blog posts that are not drafts
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort posts by date in descending order
const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get unique tags for the tag cloud
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))];
const shuffledTags = allTags.sort(() => Math.random() - 0.5).slice(0, 10); // Random 10 tags

// Get latest posts for description
const latestPosts = sortedPosts.slice(0, 3);

// SEO-optimized meta description
const blogDescription = `Explore ${posts.length} technical articles on machine learning, MLOps, AI engineering, and software development by Prassanna Ravishankar. Latest insights on ${latestPosts.map(p => p.data.title).slice(0, 2).join(', ')} and more.`;

// Blog-specific structured data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Blog",
  "name": "Prassanna Ravishankar - Technical Blog",
  "description": blogDescription,
  "url": "https://prassanna.io/blog/",
  "author": {
    "@type": "Person",
    "name": "Prassanna Ravishankar",
    "url": "https://prassanna.io",
    "sameAs": [
      "https://github.com/prassanna-ravishankar",
      "https://linkedin.com/in/prassanna-ravishankar",
      "https://x.com/thenomadiccoder"
    ]
  },
  "blogPost": sortedPosts.slice(0, 10).map(post => ({
    "@type": "BlogPosting",
    "headline": post.data.title,
    "description": post.data.description,
    "url": `https://prassanna.io/blog/${post.slug}/`,
    "datePublished": post.data.pubDate.toISOString(),
    "dateModified": post.data.updatedDate?.toISOString() || post.data.pubDate.toISOString(),
    "author": {
      "@type": "Person",
      "name": "Prassanna Ravishankar"
    },
    "keywords": post.data.tags?.join(', ') || '',
    "image": post.data.heroImage ? `https://prassanna.io${post.data.heroImage}` : "https://prassanna.io/images/profile.jpg"
  }))
};
---

<Layout 
  title="Technical Blog - Prassanna Ravishankar" 
  description={blogDescription}
  structuredData={structuredData}
>
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8 text-center">Blog</h1>
    
    <p class="text-lg mb-8 text-center text-gray-600 max-w-3xl mx-auto">
      Technical insights on machine learning, MLOps, AI engineering, and software development. 
      Sharing practical experiences and deep dives into the latest trends in tech.
    </p>

    <!-- Tag Cloud -->
    <section class="mb-12">
      <h2 class="text-2xl font-semibold mb-4 text-center">Popular Topics</h2>
      <div class="flex flex-wrap justify-center gap-2 max-w-4xl mx-auto">
        {shuffledTags.map(tag => (
          <a 
            href={`/tags/${encodeURIComponent(tag)}/`}
            class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm hover:bg-blue-200 transition-colors"
          >
            {tag}
          </a>
        ))}
      </div>
    </section>

    <!-- Blog Posts Grid -->
    <section class="max-w-6xl mx-auto">
      <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {sortedPosts.map((post) => (
          <article class="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300">
            {post.data.heroImage && (
              <img 
                src={post.data.heroImage} 
                alt={post.data.title}
                class="w-full h-48 object-cover rounded-t-lg"
                loading="lazy"
              />
            )}
            <div class="p-6">
              <header class="mb-4">
                <h2 class="text-xl font-semibold mb-2">
                  <a 
                    href={`/blog/${post.slug}/`}
                    class="text-gray-900 hover:text-blue-600 transition-colors"
                  >
                    {post.data.title}
                  </a>
                </h2>
                <time 
                  datetime={post.data.pubDate.toISOString()}
                  class="text-sm text-gray-500"
                >
                  {post.data.pubDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
              </header>
              
              <p class="text-gray-600 mb-4 line-clamp-3">
                {post.data.description}
              </p>
              
              {post.data.tags && (
                <div class="flex flex-wrap gap-1 mb-4">
                  {post.data.tags.slice(0, 3).map(tag => (
                    <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
              
              <a 
                href={`/blog/${post.slug}/`}
                class="text-blue-600 hover:text-blue-800 font-medium text-sm"
              >
                Read more â†’
              </a>
            </div>
          </article>
        ))}
      </div>
    </section>
  </main>
</Layout> 